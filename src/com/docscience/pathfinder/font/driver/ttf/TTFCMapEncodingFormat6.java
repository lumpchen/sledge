package com.docscience.pathfinder.font.driver.ttf;

import java.io.IOException;

/**
 * Format 6: Trimmed table mapping
 * 
 * <pre>
 * Type   Name                     Description
 * -----------------------------------------------------------------------------
 * USHORT format                   Format number is set to 6. 
 * USHORT length                   This is the length in bytes of the subtable. 
 * USHORT language                 Please see "Note on the language field in 
 *                                 'cmap' subtables" in this document. 
 * USHORT firstCode                First character code of subrange. 
 * USHORT entryCount               Number of character codes in subrange. 
 * USHORT glyphIdArray[entryCount] Array of glyph index values for character 
 *                                 codes in the range.
 * </pre>
 * 
 * The firstCode and entryCount values specify a subrange (beginning at
 * firstCode,length = entryCount) within the range of possible character codes.
 * Codes outside of this subrange are mapped to glyph index 0. The offset of the
 * code (from the first code) within this subrange is used as index to the
 * glyphIdArray, which provides the glyph index value.
 * 
 * @author wxin
 * 
 */
public class TTFCMapEncodingFormat6 extends TTFCMapEncoding {
    
    /**
     * Generated by Eclipse 
     */
    private static final long serialVersionUID = -5877324912330100223L;
    
    private int length;
    private int language;
    private int firstCode;
    private int entryCount;
    private int glyphIdArray[];
    
    public final int getEntryCount() {
        return entryCount;
    }

    public final int getFirstCode() {
        return firstCode;
    }

    public final int[] getGlyphIdArray() {
        return glyphIdArray;
    }

    public final int getLanguage() {
        return language;
    }

    public final int getLength() {
        return length;
    }

    @Override
	public int getFormat() {
        return CMAP_FORMAT_6;
    }
    
    @Override
	public int getGlyphID(int code) {
        return glyphIdArray[code - firstCode];
    }

    @Override
	public void read(long offset, TTFRandomReader rd)
            throws TTFFormatException, IOException {
        rd.setPosition(offset);
        if (rd.readTTFUShort() != CMAP_FORMAT_6) {
            throw new TTFFormatException("bad cmap encoding format number for format 6", rd.getPosition() - 2);
        }
        length = rd.readTTFUShort();
        language = rd.readTTFUShort();
        firstCode = rd.readTTFUShort();
        entryCount = rd.readTTFUShort();
        glyphIdArray = new int[entryCount];
        for (int i=0; i<glyphIdArray.length; ++i) {
            glyphIdArray[i] = rd.readTTFUShort();
        }
    }

    @Override
	public int getFirstChar() {
        return firstCode;
    }

    @Override
	public int getLastChar() {
        return firstCode + entryCount - 1;
    }

}
