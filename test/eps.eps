%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Acr778C.tmp)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 09:47:12 12/02/08
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 288 193
%%HiResBoundingBox: 0.0 0.0 288.0 192.96
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2008-12-02T09:47:12-06:00</xap:CreateDate>
         <xap:ModifyDate>2008-12-02T09:47:12-06:00</xap:ModifyDate>
         <xap:MetadataDate>2008-12-02T09:47:12-06:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:A98D177C88C0DD118EB39284D0DA816F</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:A98D177C88C0DD118EB39284D0DA816F</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:228183b1-be98-4656-bfa5-5be0928d32d9</stRef:instanceID>
            <stRef:documentID>uuid:efb3a583-ad72-4ffc-a6a8-82fdcba6a0c6</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 288.0 192.96 rectclip
q
0.0 0.0 m
288.0 0.0 l
288.0 192.96 l
0.0 192.96 l
h
W
n
q
288.0 0.0 0.0 192.96 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 600
/Height 402
/ImageMatrix [600.0 0.0 0.0 -402.0 0.0 402.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA0!"_al8O`[\!<E1d!1!Tbs53kg8k)BA!!**$!1!VN!!*&u!$"pUAor6*Eb.9S
9ke*XDf]i/F<F@kAnbads4[N@!"&r9#R:P@#RC\D$47.N(_@/d%1XBn((hB.+!i0V
+!MjT.lT+..5WIs+tu;;1c[W]5!C8F6qKa.82i[q49+%86NIN%$P!UU*"WZ$4"):$
4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$3JX
!"fJ;Ooe_f!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$z!!!!"!WrQ/"pYD?$4HmP!4<@<
!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?A;UOtZ1LbBV
#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZ
K7nr5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-
g>V&OjQ5OekiqC&o(2MHp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?
$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k
1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\h<``C+>%;)SAnPdk
C3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s>
ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JU]TP:M]ck2O
T_G8BN+TLS(Hq@TVXu]XSG&TZc`*aAa)3?$POtbp'EGi:MGe/Dj]nCsPTFg0$f?hA
*jgjFBij#C!p:Dq4%\m4cubr[PZVCoqKgKu%huk#5u%Z84&Q*pkG9'[EQojRECepL
!I&n`V(G5j#(sab#:Z<sOm>O4;DHDr.eFGGED\1$_!+Vn+m:<T:n/1iF.R\TSBu7@
!Aq=e;`YDq]UgMPl:5#SHhu2SWD+OoSnKM"K8r#3C$IGJcjXr`;GAN2%j]L@%dF7F
;Nnm;[*_2#:]c.rEd@g^*""_8ci]X!5X)QCa'&^Tn=U!r"X\87USg^FT;;N?:&q%O
o1>$);?P6%!9;XhkEEkDZ,JA64&?">@*t1FF;3O,oVKi71]XGWdXlI0]dOr"XT1DG
32?d+J];u."j%m.JP*Gs2nq2EM?$g@@h]hR!"$`^V<8olK=IRq8-R=5:jkE&e#uA-
]r?O(TWk4T"t<%a;+L]M*g?cO23)u\MI8&]k)N$X-87EUlTb`$a/'bt*+Fm';YK+#
"$l0Dd[-lY;A^If:_!XO+T3]9d[5a7Y=`'r$?+lrdZDGm-?G,hU[(22`;htZU6E8)
!D0d`drUNu8MnhbjAh9HNg'RoG+akFSM#68!fe\S0hq&!7WN/CfIV;1!CH^s!UiXn
Nc@U8,RONJEhrH&*+TCMGKhf9:bd78-mS;Z?C7Lq+:o$(g6D(31j6[2+E[N0!9@Zg
*^I[]^`67DR@jXA"SA?*64`$?oq2Nuj5,mYFR!NVcXBItRK*=1FmhV+SgX]lO5cgU
!U3-F;bQC)7QD.dKMe1YJ182,kt404!)dfg3moX%5TP^DP]>-5!W1AhV;P5]7mD\-
.,`LA9Q<<[o0<Y(SG&ddj\7l-9?0X)(U#4UV<A08RQWgu=FO3L'9c$P>gRFL'V:[+
!:8WO;4]M4;B@kq1XcTp5QIW#%WP!(.<C@N*-tK/I:s<,mm%/)o0FBG8H/Z:J,nn#
$4[4u[36[_dZe-Z5_BoM"-716n\lC+M?#]+;=@%F0h]S%$kG1-'ShQ5cUn=%Z,IR^
RCHb/7e28uIgQ1FE5u:LJE36mWY/YaB9iNsZ-Hl[O\#rK0H-L4\X`O(']`4B-p7j^
etrRiMNNN4_L^'[;Y6bJnb?#_51F\Ni);C&-@cos993"AC/T"jlTbd?.1&#oQ]ccr
393mYV#uZS%n\WC%NP*tSNG1I7L**^"0EZd;=pXhXTKB.-lciV!2eR$Vh%LmXYc&-
C<-G%#(QuW@g<_)KOTH9_8fq3i!N>?%n\fE:+--7^no=;;b.UtoUoZW6M0E#0Kj)Z
`tVb`Ih#'0PiK!Fj9uH:8ks@s!,tXQ%VT_aF$\iIdXg%2-].rN+/KA?I46n*TEQ=,
^PsmAP_4qTW1tJY3A^`:a'(:D-S<A)9?1cI?Ce"sTBSTY1o&cT'-)!Wp?b-26/_:t
5R0SEES&d%Js.(F#:[\@V#uoIl>]F@*)ZbAN"3^hFjKZTi#GUao^nd[ldh8YBC_j'
P"082YI+?8NWfN^4X^ClU4<F49alG`",]1/!'=i$(rd"5kO>/;31pBKkk1bd$3ga>
`tSS<.*"=6.*`#%-@c);:?j:<k*CN6Yk4aTF%%)Y+:Ma*oq\7Q:1t^$V?3><!R>BP
'SM%oJ.rn.VDD\KA,oFM:&GQL;]7n^nQ"FbK;bm+NBt#W9XC=@E_TPad?a$,)(27m
[FFqK)"!EimX#JDV^7hTU$iu"4S_Y%nMOkZ`g\/@NBJ&O<?hR?9uqo:.,o4lc0%VX
_#'o)C=-M2/8:iE\Ref>h!'b373!4laNMrZ"YFB2d8i]#\K`&Kj\nZ+D;PTTW/=De
792f;Bpr<fifK+k@8tZe?MP=N.2BlC+%kBG;DFCS*T%RDK@5@bkrC=r5[a2@6,;KE
H5]%0ciMMAd>[QC"5\P<T9V&qRR;Wlk90Di!-0N<8o!nq'Y*:U*RIYLi))`RS92dQ
Qp!rEe(A'gd[7Zg.``Dck*e=,:e#cX3oYZ+3$Y7JifK29N7+]Il-n46'_F48+,(_1
8`H"+#MO`ZjHDp#00`W/)9"]%erTkllUj^e-Vg4,#D'ho0=Q6Dmq.TM$4d6!Zk%.;
2(F2<-B)r5!QG0<Vu[,*XZQ>VGN4W[N^m7Q5V[iHS\W?0;KntXXT/@jERKk5U^%md
3'>OhO4'%Cbou+1o1*%^!g/f7Ja#gt&P*.19T8#[O:&P=4_[AS)>tsH12$\ENWA<9
0KRV_hOXp"!!a2=cTdZpA#Z-oTEWUE-Xjt@Bh-dO!&$>+U]VVd7S2a+3$%UZ"t8e&
'EL^!S59:ZUH\=AfqfZr;?/).J].WcRR**cPb\?;RK-Z]V!gg"#@:+)",]/&MG0&;
K_?+q;9)U$DShc9.AahQ#OVY]]E!5U,b-K.q,Jm4JdbRK$a4LQ;7P+Q1P>I&7!jj?
6shDshKIffnZ,^aYhK`Ao4/j0@DG(DM+TMXC+\d?[eD^G1qA3&<r9r$.a0WfCn"g;
+6%A9S+3E;SlkSW>dLNgLu'u:gd+[T;@6a\JZrULS:D4Q3$,Gc0Z4'T.<N'H-8A+P
U7Bsr0&5m`5Wo5a:al0:3rl0/&^m+.V&a6ZRP%#g?kp9LeCa4ml:<dM$+'1WqH$BP
QdM>pKsa=>!2+\c_Zq3\l.3<u(SrH5dZ46KUU_'=&-jTRUgBXWVk16r5R=-V.DXuG
-?IV"FJ&dBT_+t/3AaP9'&;t)-\?D*q/AFDAENq"Z:#QI,\*93lbt:j4IR(a5Eu9]
E_\&Ka*L%er+UKgdXW<.$e(q"!GQlMg67ZG@Y'Qb0h2>=k)Q6HK>?qH"[+P(3Z!?4
i#\7"K7JC6!SuuZJe&qq#P+\UIZt7bIqf80-]1AQ4T8<n8F8YDnji"=OLuK!_#5]I
n**(=kGcI7aW2d7Ssdh@g+XoT`[O\U3uS?sU]@0I!8p[C#8@\P!'5'I"/kge*U*SB
TEQSQmn*g)dLUdU8)D2b.JpbT88nR*#<Bh>!"Z$$Ed6h@guBD''FXu^>$e_7l=n`J
PW*=kHVr;bTE&pZl.<$Wk5pd#3p/\k!5.jd6-TMY:rEi*ciK>j.*aQ)3R'7dF$L90
U^%.YRa$_-m^)u\igS-UC,_5SBl4YT8Z%T+hI$Z^Wfp_gK?[9(e3No=)Hb<L)W?WP
TA^l:rr@aRMcM[(*;;3n9BEsk,@dD6;aFfI9AL[F:<3sg5/+EeBTU.VM)HLScd^F!
(!Sf<,&J6(`tCoFYil;l:cP+GMWJ]aG&EII!2Z>fLf=Jd+)FhYNT`/8V4^_H%0.bJ
>'#rV-jUN=L,A<"P+JbK#U&<<14W%IH;^n%c>c50+.&f>dc/!8%O`$5TMcW?.I'G\
g-M0:B[DJ2`52>fP`1$*Uf)#:7:"i2_nC3AT/&EA7a,N_l01`7V(E\d'rdRQ"5=Ll
8Y/I0&oklE*57ZJr2G=+G'sN:'HUq`!9T.=WJpMIPMC9prk5X3qMo=<+jfnXr[\S^
!1`Su/oWf95R9i*;;?0FP^3hhW]9-k&UKmP3h5l9@m8CT*:t8M!I];ldlBRir[`Un
^ceXshY_So_$&nSqL19\H,Tb;B0=W=&pZ>#J7oh@V#q9JIAk.U1n\5s.7XW,e$T04
O3?7I13fQ6ERo]VTE?&/km8A)#G0F^cYesIB,l7sJE]TpH4L+/5QJn_mcVqp%c>]p
KE4UG)..,l*gHT_O%MYJ*N=R2i)5L@72Y8Y0nDjtW#6<2*@X'Jk5_*<!"XBZ!Q?^i
V#p`iS/qh_l\[qr!%R((UH!'fF$K^HPQ8?+oU3h?-;W'M#:=s;GG+)[T:6O_a%hlT
^iZ5:R,Mb<f^u$tJ-q$&_Lp)iJ<f3g2%5g$UQ\Yh^/YE078i`T]Q15"CiqbrIPk.-
h"TcJ2[ZRCFaAL1Uj_(/+,?soDl1JeH'=j]:J]pkj&ZO<H*!oI1"b&6gED1"$ZhP<
npc)`5DQ(0cVmE`J8:0dF56#='Qt96PYk$V5sg,p32[u)c;uieF9+Y)@Y?g636is`
@*c=_#Gi>@>su[]HW"r"i:p3^H1dj5)au>.SZE,8a(bT?^ndki#%BpZg5o.I"U:L`
),pWg.?lt"KcEoKVaaKAc8_V9AE0L,/h?30V%f.l\Ao+p]57A+WU3YT)64P![R&/P
:"i'Z(#iB\SiNV3.:7h*(#![67497[.30iuoq2DY1%_=2MF#Q\?AJC(!j<;73oZ"s
WIcA9itWVUHM"0YmXTU_C^;)72/&'VPPWW2*-\.X[KS;hV#U`DE\X"fG:*HRS=Tm)
\Y'*H!9ejp@?JAhBeXjaJ_HVUi6]7E#G0EIa!-]lNd.3,e::f^r<39J!fak_N[]BN
!%p;.;Lup]U^%o'-mo"@cnJ9d;GA0F*qYH@M?%V3'P#^EH1n&Z-indfW#7a47jf[\
,4e&"*#_]Ii)1WKT_A#N"W]DG:cW8>7ntK5LRt#6J2bmtK,b5A3;Uu'G3bSOd*h)%
Ne3IdEBk!o(sO6#dHO7.@6h^IV>aGYT3;5$7VEe9Uc`cVB+t?Z"pH1Er2DJC8]:`I
EQRTB@uu&c([Y'^JO/FK,^1*F77-R!)9kGn_P,!;3nA/nU8hFd[",bOfMU5+-bj0^
Y:Ou#hO>7neaWe).(\kUN;YnT9&A8@5^\jmO'*Ef5N,Ni`[+(`Pb?JH9sS'5dJj2/
LL8!nXTVX]0cXp@1!rK`;F'M^2jma\ER_)NFMaJ7SLEr(UGJJF56Q,1DJNZpbb[QM
?rKQ0V9:7in0h<BE$!Nu#olkn7$+9c6JNE1XXKtZU6#ibMI1*rjJLe`d7pDBE!I6p
Js8>F+ETGlJK]A;8iW_1L/e7>`BD&"d7$'&BHnD>,W7#r:@r_+*)a!G8h&'_Lr+_'
.ADU-+;DR_Ek^'K".Ed:!C]%*LBa1ranM`<K@nOl_NEVP#!hp\2u9r&V'+g#H7NKZ
ME,Qg%VXcB8kb<Q"$L</X2\jp8_SmVACCS4k)*oFH;R3?c1c7*<*_p`F131T5,4RR
80RCMi+)(I4ZF;@J].U<a0/*6a'ZuQ[lnG,JaYr+m>kFK5URR$UT*m^$]occ!2'=2
3n!]u]M`n;EC,8(E[UtEl+aB74gUSUg4>,@aX2TpF%S,T)=<jm9UtT$]]UW+N"-%?
`X['Y!-%=_%tA=[m7K&K'EEb5,<ne+\A/f2MKJn(N[Po.'Sh<+c6r]aUU:Ori-d$S
U4^7W)5*SN!%?k/PjsVsn'[cadXW&$-l`XnB;HL/ks35O3MuQ1P9tm#-kPe&L[.Yk
h:UsdBa6XXTOYH=;]8=:Kr)TN<9Ce"3n5K"e<^2_p8SoFTIKm@)PM5"9C5*0GQ85]
27Ah!O#$7Y(UQQu+0VMAMfIJ4Il;Z,I&Iac*km9m=08j>TllN>k=R`:pf.7n>.B,-
O3<Lu./s:YUD`pW?:@`1EmDEjS&Ue7bf$$VW*Wl>$dMO?C-qK]Ss@DH>j,%h1p#jA
X@$Z(JRd9'*(kj7d\]<aW@2gTjW16@KatX2'QVCA3+)cEGLo0-&?K^$g*rH/=EPd2
.E4k#<EC%%:J1c"+??>TPe^_YX+hjq9BI#ea4cLXW8MCTUk1kr;$6&\Ul:ssHI>j.
U3GfQ3-&_bS2d/HZ5)?.VM\9jZ'3Ut;g.@1>^)s>3F&SG1!MOPTTB3""U&5kco=-c
Yq4RC=od8^\/E7"ip9Jb4:6CW#B?!d$0b#V7OcKK>$Pl;;UO'[$=RqaW=XHoS<1&u
"^6r=-S8C:3>otR+jIk)9g4/on9>0>P.OT42"=0C,^WG]ks6.C^i+*>:3[kO.&@&`
4OO7Y!2>QP5SXR%A+cf?!)im=qGe.U6(Vdd(]]"!':-Gu7r/]2[(lppK@Z(T]m7p*
J.*Ml4((qsd*pKQ\NEaia.]<T4:VN<A(5M;.Z]p[mm%4U(a"j57WF;ON:c+oS.BoM
011cL'>^Kb+0?t+!+6-6c8!,2)#PdFZ&/NIcR,",JUp<dR@jP!Bn)&0628n$*7=it
E(2NEBid:VS'sOb^gL(A3U9>dOEC/ll\[qU)*IPel?MP`9N$G!!'',&cuI]e1ka3W
PCP)<K9#SXYVB#Ca'Q-gOdg98@<-Ed4Ljjqk,V'o'Q@c^"c&<j+Otb?K!/@QF++=4
78ZRc^2GX[$XiP]!rYhk67go,!HZRE"?-!Upi62@O8QA&rr>@AY/R-Q*nQt,dLJhI
+9&rWB?(+Ii"&H&Fe]t:UIhaQ9/pb:&WFe[oS9FG!!-!(Kuk[7H&1]]40on6j./[f
WRD\1Yrg`RV*[,^GQscK"ccrd=\-E"/RmD1_ej5mB5ndk4OgC@aQ\RNq+i#FbK9CO
9++s]%KREG;Bb.ggbLrj5\#@?;E@`Wl6gSh3'?_,N>7#fD8esnbFXqGAdo4i%pF\H
a34c'.)6N4q/P,HJQ>m1W,)k`PmB@g>*2#]g8hgCnP.c2/!@oKc4k=l3&pA'UTtu+
eB2j`QBiSfJCK8Y:#$fI8r7ejK>f]V4,Zj%hJo'6Bqgi=:kZg--rH1c0gHEQY([A7
9rE-/'JMkTA?OiM'\lX=+EmmW(7gPi7KkeQUfco,mITZnW4"'!L_;I<!37j.pL.!r
8qMh^D[TdhRRT'2hSFl$G5>/hqi48G-t5d1OE"JN@j*OGes@I3'T:GkS^S:k#67\J
Dc,mphNOj`!)r-N!!$D*EJ'-G9F!3fU5jl.'S)j8*+U*>a,1KeNHVKt)t'>5U-ou!
if97Fr+XpgJ:C`,ES?VSH?+Y0ge\%Ie$rDR4gXgVS7C!/%2gB-VrIaYH))Dgcq3Qu
:]b8TK2*72RVu6QV)t_j[/^2i9e.7g-UUOcr?rMXV%eO^I47b55-t;"&%)KRG43Bu
qTo4'dEY7Y)<9G&8`1LP"7W(hdZ!*l:cRB0!!P#J6-u.MB9$X*c=k=m[jI3F.=`(a
esajDGc%h,Tor(O5S&-,JQ:d$02km6\dG=?m]Z/NR^@`T\@km@L@&,ahRp!9M-8L'
$8Q=4XR<:l!-mSD$2u1!r<7%@_$-!aD][J<o/dqsWLVuPWH!QS-s>bm`(R$f\:m^C
M61n.)?`K.6.&Y>;D`rM4_hWnqH"+uc:;+g,YHJc<Fp&mV$3CZ;^<K+:GmjND.9e=
m!7hoU]CuCWJZ3e@Z]Lh%2T#[<od.g/]SR$&:()sntZBA0S*@t3M[[@V!l-t*]hbe
F:oiie[+iI75OA>-@6))@*mU?6E_ue!hT9gr.cL:e9U2>Ms)nK`AnJbS1k(le7,#V
+C]oA%n_Q8kDkf])*";Z_%b7R:Dl[=(o^H32"upkcZ@s)/h+DS$]eE\S$G#M'[`M&
e%h_De5.s?.7/e!81FJ#bo-oD5Ul":,9V*$$@:bA"4io6W1+V--sCk!HH2T\1p0J]
'g8QrLn93q97L-8-rF0f*R(&N&YoGRMN]NbMJGC*->p5s7W"00-]HPkE+mQ]oSa=@
<_.k7BIBA\00r=tI^B*Uf+b-^TE%&Or]F!Y+&8&5dXj5g5j:N>E"?q\3#m%;[ktaO
TEQ;JBVcc7:^&uO:!QfB\Yis!+B)&VC5EOZ!/9Qo&j[o7V$B-BOCnW^!!)ZU:@$B:
"/c5XF;0730uY9T:HVR+irY=$&-W%6jQEoQ"a]_f!"ZuD-odk&?3p#=02AkoK1jj:
5f;%PPQ3,)H;FZn0h?<94XfXK:bduD!'K8*"3hoQ-lD8@!<3$K6c#IQ`?(8Z#9:,R
)"aKkN71>uE%sTcS7C!2GAbohEVNL,j[U!bo%`;JW7jOt:Gig2'GHq32;fP+8Hm9m
gu3S1IEh7!k,HIG>_qDK`:*cfe<"B_+V/\V60HEt^PV>Pg,jmf.u1[KOJE.deW3#h
25+la5mUPY'?fk=8'k8D$QNo;Td*m$.Q<_C^ohD'knA;>mRm%[P%kXo%gJ\P92hU>
jN5FWa!iplV%f$[243<$W<$B7;rWL-Hdoi=<#'E#gRg,K3#u\J",]pn/dDHH#QgT`
d%*`@1F<)aqp]L;EK69`8EVgM7nPD8)VdS;#,IA9)R`.!WLIi_8oqJ5PUca^5j0[d
9uiGkj)5!V5WSgEa7?%adM`X2(_XD(`iQ;+gf.6c[09,CeD%JW6jc[+dZk0reBe0t
'^T<I1g`OQ;0o\d+GfF?%n^b:32_=Y`AM'YV+,a+&Ldr4"B:,-1JK^8'.`Ih3CQ',
$FunK\E63eV+s`->'O4kX]:0N79Y#>4X2OZ&eHQa_W3^ZM'47F`E66Zp8;l:enfH1
UD1-lEbo_<FJtW+l&=,NIB)X)&nqhs`tT/9)@mfd&;4HRJof@mqTpVj'R/Q$E$uD#
KAMR8oV<Iu-ilaSk7iQt]e<k\%3q<c6.1jW`@bg)!!"*e.7!)k'EM3h]eGED4_a)U
2"J0@<$iu$7KtOp;?4rDVK5If>[tM_TQBKk#<g<^?k-lN0`rED2bn&LXt`JbJWlN&
E?(Ks.=RMOO>51R5fXQ=%S+rt0RD)18hl2-./)mjrcBOjMFQjL!%RN"V&d+Bp8.#2
!"Vbl;,&Xg4fAh91]SV4$,n&rSpF=.:b[&P^nrnqF5!)R@+BO8#cB&X3s_89!!$c8
[m1!NN)_s/cnipCBkG#+OJuaUScr,HElH<&gl1m*d)0jO-Q.ptmudO]C?<0t*,H[:
-%A_L'mDce$HdLd*>,)][RG+M%B''!q>(miRZP$c8Z8GT%P"`F\\P?seT0I2NAQK`
Ed/<;.nY%$,Z_jR^B1OWRs7e5?'h5->;\!f36bP[lscta#GiXBXj%6qlUB?V>DNbE
!9U29&XBg`#j<`Q#<3Et5bU$+U3`NhEWP0j)MU=pMN)Xt8e*m[dc#$JZ34X4cjq2I
cpi;W#6W\7o`@OBFDOHE;=s<PaTE76o\3CLR&C$n(uS>h<Cana77YgX7p7OI@()b,
,,6='_576pHX`MU_#R<&K[n(m1%/!_c8383<<+'hap?68MWh+XSBqKTW\OjX.);j#
lpuM=XnU*i8-=RA:e7K.A5h`%HAE@sbrqc?0QW\'V?\sEJ1?e1P1^cs$VUqcOIYs@
Ua<^.;N8f3Lt-Rc:6>>%W=VlTq#\!`'&:c2DdZNO-t^8lQ5%>T<gFkL2+Cc2RSCRr
Y_0\)*+k9S8e2"<^]C2oPYcUt5^;FVH0`n?FJ\"71]X(-p8.$@83Nr!o0<BX0h*hs
'Se'iPRPn?E%-9/45u?\kL+k\12*F'3MZAS5RmmI73-'7$AS_[0o*ru8pU<).?2dk
6=Y"tet*@"!sc"D*.AS-!9m.8nONp+H;fS$M?$6RhWL^;dkmhNblBS2J]AJ`pJ!"U
.<m*H:d'L;'Y3XX;gN('N9BFj$E!mN3<k\-e:?IR!fjqAPM2c`br(l0blC::!XF$<
h"9N(-1FZ(7.UC=2!c#+GqmdFC)<B?:J.Z>fGne1l^Qf;%JeJW(Sn^uOc`e5([U="
nkVqX;VpR%%K<Ldr(U7d[t`[I2>R-]EbS9gK%-a8all`^_;uX(R&E.[HN#dq)D"Dl
2$gpJOF-YsaN\_M[&(4O<,&2=oeb8[;J=?)+-ipFBTYU5["*>%$TiV&$TBr8+N%10
f,I7]-F-Clm*Vl9%2&YYC!5*1V(iHN/PeN!32T70#d-&uB`L5L#O=p*C/L/LoV&n%
,#enR"OopBNbM9o/JuA6dr.KE;&:Oii)HR:WOs8]8&fW78WnOeP?gJIa#ql!6lW19
U(j9[Kkos33:LoQ!;3/KSghH`\Y)=D+b3RJ8n.>03sRt!TOG>EgJ;6$@Y9$f32G68
MMcUIV#Z]T9*Vj;7l;r_!q+n>;aA0s-m\CNYare4`r`&o2(eE=.9/Cm;C[5m.oKTu
:Fl]04B$tNTV.`Gd`@D:-BJ;L!i/AFFm2i#@7Nqt)j9;l,_-B40EGlZ`A*gi9%t5m
EQiE"ZVt#+Vl`#n.6LKA8Wh7EC4KWfP8WW=LA%;0]MK`j.=[Tbf/0$e!#-=U!9Spj
J-!n8EBkLANXlg(K-8TpK17:<!C<MgXZIM#FmVF$h^GA28o_Z/P<90P3Y+gf>ga51
?3ND1$31(F'SDi&!im;_VNLH@:19^t,B;/19M]%F%hs*P6"%2(JI4n>?ML=m!-(7.
EbPG')DDj46?o.*\YTBKBdlPe#(sVn#8DlBW7e*M`OYprV2.)Fdf!o.P8odDFpjJF
?k5khV$!0e--0$9WR$!H+>m%`/PU<l3N?"b?oL2jWa9Mn6mO6b^6O$%9h<lYg"u`/
g]rBtC+E/[[`Zu(mopB_0DEdY<oC6;f^=7Gam)@tX95jsTF-=E!e^-J=kDmOVDPo;
&l)$r.C?i^:A)caDX?RY/V>mQB*+9jiej4aI#6tC'?s!@3:k^_$6?\Zo-%d@NIfZR
Gg(1Cm\cRTcnSA.A=?9E)K+WEe)Z&PIDY>O<ZLi*XFLYJNn&/!_[IT\V)3atcN&PH
A5LK/S-jpdj49d5'[\IZJO>NsMJ%BP1W:\SH\*Oe"F8><ktuRcdZ[7`8o9/JLd40`
8m)lrr.O+eRTC?H>&aeHUA@tDXi8:N`D)0,GpMhMW:B(#h$",;9L:d>L_k%&oqmk5
1J\+5-sM5b:`ndZ'Q*#j:q\=:1KCtI$BYD#cQ\WN%^b^*'NU)>Mhb&lPZ-!SHIX<i
M/6Y#A&V3)irmkg(f<b<<>:DIXtL12Od__BUF]1BY/H?4VIu>bks=W/5s_6,i,tms
:Dfs[`tYGAnNe1o&=j7jBt1#'-ibX&*BI)+j-hsP!!Dkir$X[LUU:(NpS0\^!C6d;
'=B7H;L6d\3d..u3R&G_'F[n""OI3/:al)1V=2AD#L\,9hN+jT:+/-<TES8X`>#Ag
bnL1Y\F3*N*/])Q!i'gsPsgE&;>_dDRT1>*$tl/r!"M'`ktC]B*bcS^FeAou1k=Z8
G5>(JXY:1Vm7FpK)FAIk;]2Qbk%sRVM;0Knfd5?8lC>=&:'mh+-^*BtC5'XbaVh,1
(PH=0<G8+up&73CGB;34aT[GkG$2%):S=aHg0BeM9=NQGh!Spr[B7-70on'8<be6P
S?]5CQ'?ApRmN<KJOn-5-kStG+f*G\)6PtobB'O7;:nX.UYJ^3)!b>[Z"$&>)$68E
#6LHR9MjHI>>YHc:3an]:-#,i.7klep7k8q%fHONV(/W=#(]F+</a=DXakIe.o%pl
WN\Z>3/B75R\iYW"Epi6_"Of!V`>HfDM:RY96TnWi"M!U+t=24K7,6b*6.dYZm1o`
nOYTR$*A:scQ#o@&S34"`C:XoRX1Tm!i]B"P4m6f]Om`O.QF,'MKm6MC-X9nLt%'@
7QAM_&!i`dKr4MUcuLK4$,mi<^nh-n.I+G`<HKUed((.GVB?Qb8u[Bd8\c%g7(+sP
!%CLY,;h2AA&UYu&d+SCWAOCC,HX]T/T2KjWLK5`1lDI)PCPWg/W*tQ$IL(Va0T6M
/PRg\9d_da+\AIVMF)Vh!)_0rER/q7!$/$Ek7jgSV"Nl$!VE08(nkZW:XXb6S9:Tj
5j_&U!2OVcJUh`+4gRE3RK*S!P]ZVoRQW&!kU>GB!$'Dh`tSOAPQSru6cXL7@Xns`
'YW`q)GuI?!T&BYbou/rq?d3tECpI^!Qh#(-ilead76eW!gu'f1SNg"]HHT8,MK74
4$7'%%PaD,p]3p21]S2O`?F/i4_P(\.AZQ#!B<5gdP9mQ:4EV-j9*(M%l/:jMLnF:
p\NEcmWOW@R;mNCi#8DA\T)iu7dS]9cL]0>7LQcn.F;6oHJ=;Ij7P:+D]Df6<Wj<.
a/Pma`X>])#2Y&LD(mCO?6#QaK3-asTi;1l3XUi,S<M2H4BDtac<;Hq'U%"(0h[sQ
F%Rqb;+FqAqZopo@[JTbEK8Nq\qQNGT,_Ff"Z0,/<:Rq"[npOq<JmBTggZM2:/)Ea
F;XNb0p^-XO0'h+k\+gT"`_U=EDCWHc3^@\*@XS+=r"+Wge(E]-sNpQkObPtYV[k;
;*4C_OH&%)K@bu\#;h;gcO#T>T!Y^;NOj+1N((JR2p0)Lf?e6DC0\5T20#-cJ8NI*
<EPch*NI7%d&gb_mQEhU2(4:VHa5Bj9L6WgT[bP*`)$HLVkW81oVFt#8s/,%6oSPg
=9er)4]Ei-FJc=^CLt$m?s<]-/l)PE<%`Epj+0]Wq-8WtOUQ38&Y>8),?,[45Qdi+
Cf[fuM49]<PDX'hBl7XSWpE9XgsZXAcqcKNMP1'mUs1?`[/_84*;?+FBb.$A%[7;]
)De"#!(4^He7Xe':o8aQPS&q?G;L?h!$"n,%^^=?:iS`+HLNA1B>"bi'V-WP*I+FH
a(djn5*UE@!hPVWNi&'5U`B$"!744M!R39D!!Y/C^`3[b*<mnl4AliQe>%mURK*R4
;@^H6;:*YilTbd^4OHW3TF-b,H;b,0j,DI>N"-:d5rbo5M9er(%Ok-hMJ<$&!=qk&
)1\X!:+@&'<17Jg1/&6iepYg,)8R$AqjjL>kAK_pEiMp`Y=5K1=#?@[DC!mBQ9Ni6
hbH_I-,K0ul5-\*(/Xt!:5MG!]&er$fYO_:[J=*j]fKEPYtGbN5WSp8E%*M,XqrG@
g!l0WaBlP/b,)TM1u=JXOc],*Uof&7n'FgtV&[s1or!=/9.58+#&nQI'^mc8@67?s
.!Ff#I\;<@!hRJ7K>FFgb&c!c@`O[%Q47^R8oT`Sh:PXTgP?ei`<tEehk646]8eu$
FJ*Sn-ifA:2@Uf$V/3EY3Vq)+%bK&BqM)jdOjI#\:J-rV$rX)+g7,L&;D_(9YTVYh
]2AZeGUF?S'J";>\Bl\J(B0k=5c:JFaIsp0:AkH%,-4)t;FG\u<1@oKBi[E2[pZq=
QD96QnddS<Mjc65$dD;h#>3Ri`_F($!*V0Qh3rXZc1J#/Yq:gS4B'ZJo$oKb(8&A^
<f0&]EY2+rV'cu*eJW,M`"+Fn-CRXUERLD2"O^n6HVt>B0F[eTRS<<BBFqOjd[Nig
TEV![.5Qhd?>'@[4&U2X"3s%Y8JD.GR%Oja.0-"CTqKa;3Mj_D!<t>QhN".@#L\,:
J58"mW$a]r45^GG;::Yj`B0n?M?#_9oVUW*!-]Fe+i$3_US4HFc6r^,1je57epnR5
)<R-j!.)unO%Mk+B]s+Ne,Z6]U6#d\5SXf).CoC+mEegFNg4:?4`f>7?@mfih.QhM
buUA4LHGpN__kbCcUqk@4/n_n`ta.Dq3M(&k.2R15uK3?"i\p^qnek_Bq9Md$3pPZ
'[eI4+CG\P$B;>dCX/mWk&o/J:u"rjVrEeqaO"T'oUt_M7Oi,MP=CiJTVA776Kba1
$CAtT05##k/thVhEDAsE`?5lVb++>#$L1UKdmYdn1!<Hkm<o!F<%L#r9cqNLOtqUm
1^\P22#oF11dt@V32V7aOHMj3oVAV=:?6YtUh.+E!'TT1`I@'F>5F69TYS'#.DSab
1uKbnU,#"WEBm]i=b?&.5S[IE-L=,u:'F0u.WB&eJdCaAEnm*t.g'\L!n;d7;2T\&
GSJRPYZuau8>o^f84i,J&hp)WC8'G)b/?jO*1EAt.**+NfWA%Bc+AufMISLt[ku*@
FK;YkMdTILpS;lGoV<<@V?;YqWB(A[o1*Un+a[)?P<Gm.K`E_cT_$OW3!PIa5RMb3
-QOX1+J8^U9A^EqMAM66J.=!&ME9)be8\.1JO&-kFQl$tE!7,PFQS[(BE4kCSC3EG
!&tr*35m6lQ@KL_P]rr&PUQ3t"<:>5k)P[s"TU1i@l/gq;a:`;:anG(J=m!$RE%oS
Jb5bY'EAf18d7=r5f[VG"TSPM5b`cXZ2&XAF,h]fI)"W74=s_^4(H^'%eS0''^jc'
!Zk'',%Md1T,9F)NjQU;eDn[kf/?-cF.V=A@snVraMr"\^5HOTksY5%Vn(9ODN,1,
MD=QrC!qiS@l`TY)RGH>c`"P;Xr@\uQYe/:9@C-t@9c]>SjatT$p_1m<3\KW3F('Y
jI.Zs`I2PUV)rAn-BNAJ]9Z:,KaQX%hk;%jAt?B,N2!'O*70u,J\**K3`=sgbrJ39
MPtNb;W=2l4#Zf.'K!B-?`5I;JP3A%6)Pm[E[f5ORjO\kKm.Ne;q6:"!*#oO5o?J^
l4("K;hEGte;CWT&1p%H']hZ+!j"lsG,pR++itoBLpp!`O9MTu6AeZ\>H"?,jOaGH
ECa9%btMWd>""B&ktEIn5\UP@VdTZK.C?c;$)Sh..07J(?G'.m'EDV`..9cI.6:9*
BZC19RL/@H"(2.%3`6]f[4iAI8\j>P'S&[=K2*,FR@jQ.MJDh1C39M*m7G[Pc8.`F
J/>%=EC%]']`eBUSC/(>>i8K\MI7hl1pk`];lKb?UD+2Oc4'ajm6TZ.oGOG=!-Ap-
es4;Y'SCs%$cjPL^Ps8?hN1P7T%'f11")"W!RmkZVN[hV.&)8]!*&?WPf),,S2jni
K`2^"O[6r/3?oQCm7IQeBE6!p'][o2)<-_mB9.'E/"5"j:MT29ITjqED1'=D'h_g;
(M71@PN-erl8]TcJpLKZJZQ$ia%Z)1$8?$"]a\s]>+Mp-N[\t>PdmP)JY8CL+Va9>
"\?XaMHj&1brZU>get)i8A[SB@!pJZ;ej0Ehusss,?5lS1u(rF/f3*U!DW_2!K*'i
jl7?-Q,1'E!DX>r`CPMiB;Hj^!2TagiBr"+-roM2eX8?276+D6<i&@Yd]"a[h1hrZ
aU(1(Q8em1<Y[k7Zt]7iPktk[JrV<U"X.\\$Y$M7aDks)2)McVdX"nq6C&gWSC/(k
'FJ4gkm.t:bpQHS5_TmZ:6]D>J/+,RdZJ4^)!t!#cfn$JN)CQm5R)M,Ff'_KHdfq6
*@MpVUsEd@/gp_IMHU!olUE:?.0VCGN]Es#dZ_?l3T?,.lmV.4a1WH'_LM\B^nVpL
#rJI<JNs2P32<BT#9E%=8Y?'(eGNd;;J-&]!bk.sBG@5!!+0/"3#%.#7sY.E*@XOu
(n^kJ.7!-T3Y!T%-ir"sc6s[ZBE6*fSS:M,!2*1Sl-0nC:UWD8NRJ`D1P&DdF6Ed2
,RF(@&(6n%:Hb]1m6^n<[(SF5J9/ssTVMWC"B7#c@=ft=du%C?g422s:;i653cdlh
9M1Zomk7AcmDK&p+SVs!Rn'oO8tACEj33L^b1[[%5cEV.9b:ab\>]XNaY_;=`T^$H
8^`i(AUpVr!+M7U#tb@LV]p"<br]/LY_%EubI+UD"W"Ou]u(QLH:>A9cUqjbm-Sdt
9N.3j5c:X/O>[HR,-<jM,k*;=<oJ%eehCp_;b2co$0jLN8Jk=D492aIfWF0J[P;f=
?5-=2<,D3TpoQ)4k'Cf%8ms_>T_0#7;J>;c"TsVb.6-Q`e5/V[UDW5h"fD%5.6&$"
mm%5+:bbBUj"pa[UHENhME4Q8!DAG$'J[X#!&,i_FJCs-Ne2cpPLbsp1QH.A!0^(0
ORYgCXT0kmg6t(NPK#$V'EI'>W9HQ(LUA6F8Okb831p83.-N'".-j+uUT$(H3"u@@
-p.iAdW.@@"<=%K>YoYHQC%q<1o?J5.&6m6!Ch-!",[(A70$.Gig2c(!.&+7SG&UR
B=.^^1qa&?5u4-V>T,"1;*Yi[1!Meg.1,%:;'HJu*)fWiVi4OTh'kidBg.boMC\jd
oUp9E-V?hfP=Poi44H&OZ74e1"EjYl7hcBJQJP8;MkKlmMR&2D""e6".dD(S*mpWi
kV>5Wb&mHf2han<`mKZiNT27eV'au!*2;$I6BY^[(r[>gW$hlb%Q[E8EBjh&]GaU,
V#l/^E]R.LBbY0W8BZ)i8NhoR6WGVS:_q&?"\T<=3B_,u!C^oFIEX!9Yf)>Gi)H*P
9R-W:RR1e3N35=>VDIg@QHr/QX<GO29dXr0MII8r3qGcBV#Vq;Uct"M;LPJE3`;R%
Unnb*A"$^-+mk.nPQ6BpdLPoO_4q\EB)lD$oEnq#TEC'D6(HAc5QLZ/N[Z]68gj\c
'J0;^m6D!-jNr=S:D@=m=o`:&9C5=!Q$K#)q+s)En0pjJ-ijg!8ih#_.&6hQ./MAL
44"%NTQHjR&*6IeTV@I[-lk?F!UWK=U]Qml'S'kp;*^cZHW*`2V&a9/F27$*$7U4q
:+8t2!)dmdORO[cS5PdU9Ms[]^@Y5&oV.]:70$2^T!\*J;aC&W,R5$<S_B:A9`P9a
:cm)+8l'1%%g1[Ke9@`O:]c\m>]WX#huca=8-R9e+<DsnME2a(1+=f+Co7K4o(tD_
X$H2Mq+jjcih#821f.kQG,CCZd.2p?;b6B[gR@;j*lc@+F$,=V.a)"cED8@Z4'#+H
OeS@K%OpVPVlVJ^(ora&A!WiCD1ndL,)Y0a39%*]$D?WY)e0U%c(:3L(aO1FD3C2b
kto$aL6u2JBna(VZq-+8geB.QgsUcX0b3G>MEd@R=p+r0/h#XTRK*Z0ifnC2#?j9@
TEQ$>RMUhfkKm$*]Ma[q6V8a,c4(e--BN0p(qe4F>!#Vp*7,j!*)Xr_XT\77!&)c^
Nd.>`7WC]4ks.FsN-O?G3"uAO7VSNZ8l%8D*jdWBV*%R6>gNNQPKc0+U_opk-il'g
7m,1f:cY0KS.6t798X5^'S$2!Uo!7^-8F)%&.DHGSiNI$!,/*n(o6EMQj`707fncp
T__Odm7Gp3-kp[PJ.QgqJ2e6b=pHE3^g>nj%m`fA"XP9"G,68PS`tHA5QU#-P\6+K
H2q99:_!pK!D@>ndN1@g.E@<]oYtXf%b.%_cSX&$M?H"':^9!.n>)mXlTiJt%2nl5
EM$tG;8jVL$-:(<7Q@)l]M^JZ'V/%JO:E7QUHPS;;Lq(@],g-'O>BVM)!6@Z.``,'
;o(gtXT[XKMRb\P3<kbG$8AklT3;5h_/\i&dWD9)$7GnL'Ms*S&:e0:JOftoj3iGf
e<m).oqVZ_UU;IeBEo4O]`=h$U`F/_!C4KG%G4OL.67;S!C3<($3gLmNe2ckr6_$4
:dP"-!EA6N%oP2S#ARL?!'8PZaV545qG768i)8SlX>/.`Jq+CB.5p1U3#%c'FJ&a=
'VKM4pSC_P$@;B@m7WI\7PR0Hkt65)6-8@e4:23F$jq5!;@3RNMq^'1dZBJC-p7g;
!WgOn;bF_O`XMnN!D>sEo1CDJLSZ,k*kYAj!C-npB^(sA7PR..jPkg.US-V,r)3V*
.e-,M"XcZ&$>:DW;Z/$E;L;?R;@Y)T"#RN_TV,*^MCEjK5SRE'RtFFORZYY78%gVK
iiI^/[3ulc7l93bTE]V<%L!^/PskZX4A\$)993gB`tSpe)5IKO$37l76K\Q1>YkS+
'FY<R'][o9EdCU`c=oQ%ideP6TZ$m=RR*(]IgTE]8n\5ddZ1\OV&k5=&rbh1pnYqi
'Fs-sig,*#(o+!$"(3)e#&/@U:]ba7kUH.W:]_/2?J2(oKeGa2+;5bDldC;<:&n)m
HfC:[8ptC=M?#q-V8m=90gH'L#Gj'jV!C8N8j[KAV]MH%J5?4L.H"+`OS,7NOj7VS
\=iB?J/>=@oV;PQFi=>.8ccm`4&U7@!'#$cl&#K#M?X&iJitMYBZ:K)#>.ia7QI=E
F9#1!5sQ,\!Rloecj+kn4_P\f@+*DH3Mjb1!73E5DJ;AuP_oHST[MlKNe2d#M?ca[
e>'3>!)Bn1QB7%8-il%qcr/4\C&gM55c)F%M?%NU;N<1r=ssD4d7UcB"_[i8=Pm;<
pA.WT=s-9":E:jXL&f_f;*YU*LS:H"&B+P[:222M!;36e719;^.2Idi!57Ub72,_\
C/ID6!48>^;*`d@G+sipME4Y_73E;nI;#@**%;e`-iiZaBVL"kFeodL5QU+?.&)5&
>$ghu5R;$;;*YW`UU:e4!SWagMC9=:XWaEr">=1XU5B.;FJPXg5VHV5ksZ9d05<S;
.%g`]e.0u*5RMfUC=,HM"0%qj703tkl6r<6g68oY:]bg7MC8HFBVL@a4_S`-MC8Jm
.=9H2!!7^?'EGMsoMIj`?F3Qu!.Y%%~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
